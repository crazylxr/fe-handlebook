(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{272:function(t,a,e){"use strict";e.r(a);var r=e(28),o=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"二叉树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),e("div",{staticClass:"lake-content-editor-core lake-engine lake-typography-traditional",attrs:{"data-lake-element":"root"}},[e("ul",{staticStyle:{"list-style-type":"disc",margin:"0px","padding-left":"23px","font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word"},attrs:{"data-lake-id":"f473bd67e4fc46af75624b34e7994fa2","lake-indent":"0"}},[e("li",{attrs:{"data-lake-id":"a1a9a31d68963d2d764f9abdde733946"}},[t._v("满二叉树：除了叶子节点外，每个节点都有左右两个子节点")]),e("li",{attrs:{"data-lake-id":"b8df3b96e1b89a251db983796be60be4"}},[t._v("完全二叉树：最后一层的叶子节点全都靠左排列，并且其他层的节点都要达到最大。为什么要规定一个完全二叉树呢，因为用数组来存储的时候，是不会空的，")])]),t._v(" "),e("h2",{attrs:{id:"存储方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储方式"}},[t._v("#")]),t._v(" 存储方式")]),t._v(" "),e("ul",{staticStyle:{"list-style-type":"disc",margin:"0px","padding-left":"23px","font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word"},attrs:{"data-lake-id":"1b92ca6a5897d4808b00f99f54d1b1d3","lake-indent":"0"}},[e("li",{attrs:{"data-lake-id":"e1d43fd418057c71e95cc7dc95dce070"}},[t._v("链式存储")]),e("li",{attrs:{"data-lake-id":"a38b13b1998ac8fe4e09bd1b12b6b450"}},[t._v("顺序存储。如果节点 X 存储在下标为 i 的位置，那么他的左节点就是 "),e("strong",[t._v("2 * i")]),t._v("，右节点就是 "),e("strong",[t._v("2*i+1")]),t._v("，反过来，下标为 i/2 的位置就是父节点。")])]),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"d1878a80c1dabae2faba1f97668f68bd"}},[t._v("顺序存储比较适合完全二叉树，其他类型 的存储会浪费空间。")]),t._v(" "),e("h2",{attrs:{id:"二叉树的遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的遍历"}},[t._v("#")]),t._v(" 二叉树的遍历")]),t._v(" "),e("h3",{attrs:{id:"前序遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前序遍历"}},[t._v("#")]),t._v(" 前序遍历")]),t._v(" "),e("h4",{attrs:{id:"递归"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"e484125e79b3c7bfb728a36f668fa42f"}},[e("br")]),e("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"mUZyS"}},[e("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(89, 89, 89)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[e("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[e("div",{staticClass:"language-undefined extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var preorderTraversal = function(root) {\n  return root ? [root.val, ...preorderTraversal(root.left), ...preorderTraversal(root.right)] : []\n}; \n")])])])])])]),t._v(" "),e("h4",{attrs:{id:"非递归"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非递归"}},[t._v("#")]),t._v(" 非递归")]),t._v(" "),e("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"wgstc"}},[e("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(89, 89, 89)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[e("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[e("div",{staticClass:"language-undefined extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 方法一\nconst preorderTraversal = function(root) {\n   const stack = [], res = []\n   root && stack.push(root)\n   // 使用一个栈stack，每次首先输出栈顶元素，也就是当前二叉树根节点，之后依次输出二叉树的左孩子和右孩子\n   while(stack.length > 0) {\n       let cur = stack.pop()\n       res.push(cur.val)\n       // 先入栈的元素后输出，所以先入栈当前节点右孩子，再入栈左孩子\n       cur.right && stack.push(cur.right)\n       cur.left && stack.push(cur.left)\n   }\n   return res\n};\n\n// 方法二\nvar preorderTraversal = function(root) {\n  const result = []\n  const stack = []\n  \n  while(root) {\n      result.push(root.val)\n      root.right && stack.push(root.right)\n      root.left && stack.push(root.left)\n      root = stack.pop()\n  }\n   \n   return result\n}; \n")])])])])])]),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"76645542b5890be68e0d11c70318c95e"}},[e("br")]),t._v(" "),e("h3",{attrs:{id:"中序遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中序遍历"}},[t._v("#")]),t._v(" 中序遍历")]),t._v(" "),e("h4",{attrs:{id:"递归-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递归-2"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"106defa0fdedf3c2fc250d567c2988ac"}},[e("br")]),e("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"EVEGp"}},[e("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(89, 89, 89)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[e("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[e("div",{staticClass:"language-undefined extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var inorderTraversal = function(root) {\n  return root ? [...inorderTraversal(root.left), root.val, ...inorderTraversal(root.right)] : []\n}; \n")])])])])])]),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"b8038668ab8ea01a1671aea660114050"}},[e("br")]),t._v(" "),e("h4",{attrs:{id:"迭代"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#迭代"}},[t._v("#")]),t._v(" 迭代")]),t._v(" "),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"31a564f553e5c98bcceadbbc911172bc"}},[e("br")]),e("div",{attrs:{"data-card-type":"block","data-lake-card":"codeblock",id:"rhCdg"}},[e("div",{staticClass:"lake-codeblock-content",staticStyle:{border:"1px solid rgb(232, 232, 232)","max-width":"750px",color:"rgb(89, 89, 89)",margin:"0px",padding:"0px",background:"rgb(249, 249, 249)"}},[e("div",{staticStyle:{color:"rgb(89, 89, 89)",margin:"0px",padding:"16px",background:"none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0)"}},[e("div",{staticClass:"language-undefined extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var inorderTraversal = function(root) {\n       const result = []\n   const stack = []\n\n   while(root || stack.length > 0) {\n       while(root) {\n           stack.push(root)\n           root = root.left\n       }\n\n       root = stack.pop()\n       result.push(root.val)\n       root = root.right\n   }\n   return result\n}; \n")])])])])])]),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"d57df211d96e423e6f27ac1136860d16"}},[e("br")]),e("ul",{staticStyle:{"list-style-type":"disc",margin:"0px","padding-left":"23px","font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word"},attrs:{"data-lake-id":"3f613e9537a0fe0122fe5e539877a15a","lake-indent":"0"}},[e("li",{attrs:{"data-lake-id":"83e301fb2edafd6e2f5006e5a24da7b0"}},[t._v("后序遍历")])]),e("p",{staticStyle:{"font-size":"14px",color:"rgb(38, 38, 38)","line-height":"1.74","letter-spacing":"0.05em","outline-style":"none","overflow-wrap":"break-word",margin:"0px"},attrs:{"data-lake-id":"d01ec2e894d401ff7fe20915ea56a011"}},[t._v("这三种遍历的时间复杂度都是 O(n)")])])])}),[],!1,null,null,null);a.default=o.exports}}]);